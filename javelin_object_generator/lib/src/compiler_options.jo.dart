// ** WARNING **
// This file is autogenerated by Javelin Object Compiler (joc).
// Do not edit it directly.
//
// ignore_for_file: annotate_overrides
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: directives_ordering
// ignore_for_file: prefer_const_constructors_in_immutables
// ignore_for_file: sort_constructors_first
// ignore_for_file: unused_import
import 'package:javelin_object/jo_internal.dart';

@immutable
class CompilerOptions {
  const CompilerOptions({
    this.roles = const [],
  });

  CompilerOptions.fromMap(Map<Object?, Object?> map)
    : roles = _rolesFromMap(map)  {
    map.validateKeys(validKeys: const {
      'roles',
    });
  }

  final List<String> roles;

  Map<String, Object?> toMap() {
    final $roles = roles;

    return {
      'roles': $roles,
    };
  }

  @override
  String toString({bool pretty = true}) =>
    toJoText(toMap(), pretty: pretty);

  static List<String> _rolesFromMap(Map<Object?, Object?> map) {
    final lookup = map.joLookupValue<List?>(fieldName: 'roles');
    if (lookup == null) return const [];
    return lookup.joMapNotNull((e) => e as String).toList();
  }
}

void joRegister() {}
